<project name="FeedBack" default="dist" basedir=".">

	<!-- set global properties for this build -->
	<property environment="env"/>
	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="dist" location="dist" />
	<property name="lib" location="lib" />
	<property name="tomcatdir" location="${env.CATALINA_HOME}"/>
	<property name="projectname" value="votenow"/>
	<property name="tomcatmanager" value="http://localhost:8080/manager/text"/>
	<property name="deploy.user" value="tomcatadmin"/>
	<property name="deploy.pass" value="tomcat"/>
	<property name="webappsdir" value="../webapps"/>

	<path id="master-classpath">
		<fileset dir="${tomcatdir}/lib">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${tomcatdir}/bin">
					<include name="*.jar" />
				</fileset>
		<fileset dir="${lib}">
			<include name="*.jar" />
		</fileset>
	</path>

	<taskdef resource="org/apache/catalina/ant/catalina.tasks" classpathref="master-classpath"/>
	
	<target name="initForDevelopersConditions">
		
		<loadfile srcFile="${tomcatdir}/conf/tomcat-users.xml" property="aProperty"/>
		<condition property="tomcat-users-not-ready">
			<not>
				<contains string="${aProperty}" substring="tomcatadmin"/>
			</not>
		</condition>
		
		<available file="${tomcatdir}/bin/setenv.sh" property="setenv.sh.present"/>
		<available file="${tomcatdir}/bin/setenv.bat" property="setenv.bat.present"/>
	</target>

	<target name="createsetenvsh" unless="setenv.sh.present" depends="initForDevelopersConditions">
		<echo>create setenv.sh</echo>
		<echo file="${tomcatdir}/bin/setenv.sh">export CATALINA_OPTS='$CATALINA_OPTS -Xms512m -Xmx1024m -XX:MaxPermSize=512M'</echo>
	</target>

	<target name="createsetenvbat" unless="setenv.bat.present" depends="initForDevelopersConditions">
		<echo>create setenv.bat</echo>
		<echo file="${tomcatdir}/bin/setenv.bat">set CATALINA_OPTS=%CATALINA_OPTS% -Xms512m -Xmx1024m -XX:MaxPermSize=512M</echo>
	</target>

	<target name="initTomcatUsers" depends="initForDevelopersConditions" if="tomcat-users-not-ready">
		<replace file="${tomcatdir}/conf/tomcat-users.xml">
			<replacetoken><![CDATA[</tomcat-users>]]></replacetoken>
			<replacevalue><![CDATA[
			
	<role rolename="manager-gui"/>
	<role rolename="manager-script"/>
	<user username="tomcat" password="tomcat" roles="manager-gui"/>
	<user username="tomcatadmin" password="tomcat" roles="manager-script"/>

</tomcat-users>]]>
		  	</replacevalue>
		</replace>
	</target>

<target name="initForDevelopers" depends="createsetenvbat, createsetenvsh, initTomcatUsers" description="run this on a new tomcat standalone instance">
	<echo>modify files in tomcat configuration for developement</echo>
</target>

<target name="init" depends="clean">
	<tstamp />
	<mkdir dir="${build}/WEB-INF/classes" />
</target>

<target name="reinitializedb" depends="clean" description="recreation of the database">

    <copy file="resources/context.xml" tofile="${tomcatdir}/conf/context.xml"/>
    
	<sql driver="com.mysql.jdbc.Driver" url="jdbc:mysql://localhost:3306/" userid="root" password="Pass1234" autocommit="true" classpathref="master-classpath" >
		<file name="initdbusr.sql"/>
	</sql>
	<sql driver="com.mysql.jdbc.Driver" url="jdbc:mysql://localhost:3306/${projectname}" userid="votenowusr" password="asF,5!BC" autocommit="true" classpathref="master-classpath" >
		<file name="initdb.sql"/>
	</sql>
</target>

<target name="compile" depends="init" description="compile the source ">
	<javac srcdir="${src}" destdir="${build}/WEB-INF/classes" includeantruntime="false" debug="true">
		<classpath refid="master-classpath"/>
	</javac>
	<copy todir="${build}">
		<fileset dir="web"/>
	</copy>
	<copy todir="${build}/META-INF/">
		<fileset dir="META-INF"/>
	</copy>
	<copy todir="${build}/WEB-INF">
		<fileset dir="WEB-INF"/>
	</copy>
	<copy todir="${build}/WEB-INF/lib/">
		<fileset dir="${lib}"/>
	</copy>
</target>

<target name="dist" depends="compile" description="generate the distribution and the tar.gz file to upload on openshift">
    <mkdir dir="${dist}"/>
	<jar jarfile="${dist}/${projectname}.war" basedir="${build}" />
	<jar jarfile="${webappsdir}/ROOT.war" basedir="${build}" />
</target>

<target name="deploy" depends="dist" description="deploys the application on tomcat">
	<stop url="${tomcatmanager}" username="${deploy.user}" password="${deploy.pass}" path="/${projectname}" failonerror="false" />
	<undeploy url="${tomcatmanager}" username="${deploy.user}" password="${deploy.pass}" path="/${projectname}" failonerror="false" />
	<deploy url="${tomcatmanager}" username="${deploy.user}" password="${deploy.pass}" path="/${projectname}" war="file:${dist}/${projectname}.war"/>
	<start url="${tomcatmanager}" username="${deploy.user}" password="${deploy.pass}" path="/${projectname}"  />
</target>

<target name="clean" description="clean up">
	<delete dir="${build}" />
	<delete dir="${dist}" />
</target>
</project>